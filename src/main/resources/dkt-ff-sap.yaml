openapi: 3.0.1
info:
  title: FULFILLER. DKT-FF-SAP MODULE
  description: SAP-FF is part of the Decathlon Fulfiller (DKTFF) suite, and contributes to the Chopper project.
  contact:
    name: CS-Fulfiller
    email: csfulfiller@decathlon.net
  version: V1
servers:
  - url: https://api.preprod.decathlon.net/decathlon_fulfiller_sap
    description: DECATHLON API PORTAL - PRE PRODUCTION server
    variables: {}
  - url: https://api.decathlon.net/decathlon_fulfiller_sap
    description: DECATHLON API PORTAL - PRODUCTION server
    variables: {}
tags:
  - name: Shipping
  - name: Container
  - name: Cancellation
  - name: Supa Kafka
  - name: Queries for admin
  - name: Zones
  - name: Replay
paths:
  /v1/zones:
    get:
      tags:
        - Zones
      summary: 'Get all zones. Note: there is no pagination yet!'
      description: Get all zones command
      operationId: getZones
      parameters:
        - name: division
          in: query
          required: false
          schema:
            type: string
        - name: country
          in: query
          description: 2-letters ISO country code uppercase
          required: false
          schema:
            type: string
          example: AT
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Access unauthorized
        '403':
          description: Access forbidden
    post:
      tags:
        - Zones
      summary: Get zones by their IDs
      description: 'Get zones. Note: there is no pagination yet!'
      operationId: getZonesByIds
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        '200':
          description: All zones
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Zone'
  /v1/caches/{cache_name}/{key}:
    get:
      tags:
        - cache-controller
      summary: Get cache by name and key
      description: Get cache command
      operationId: get
      parameters:
        - name: cache_name
          in: path
          description: Cache name
          required: true
          schema:
            type: string
        - name: key
          in: path
          description: key
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Cache description for the given name and key
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '400':
          description: Bad request
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '403':
          description: Forbidden
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '404':
          description: Not found
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
    delete:
      tags:
        - cache-controller
      summary: Flush cache by name
      description: Flush cache command
      operationId: flushByKey
      parameters:
        - name: cache_name
          in: path
          description: Cache name
          required: true
          schema:
            type: string
        - name: key
          in: path
          description: key
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Cache was flushed
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
  /v1/caches/{cache_name}:
    delete:
      tags:
        - cache-controller
      summary: Flush cache by name
      description: Flush cache command
      operationId: flushByKey_1
      parameters:
        - name: cache_name
          in: path
          description: Cache name
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Cache was flushed
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
  /v1/retriablejobs/jobs/{jobName}/pause:
    post:
      tags:
        - retriable-jobs-management
      summary: Pause a job
      operationId: pause
      parameters:
        - name: jobName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '401':
          description: Access unauthorized
        '403':
          description: Access forbidden
  /v1/validate-shipping:
    post:
      tags:
        - Shipping
      summary: Validate shipping (2nd oneff step)
      description: Validate shipping command
      operationId: validateShipping
      requestBody:
        description: OneFFShippingValidation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OneFFShippingValidation'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: No pickup point provider found for id
        '401':
          description: Access unauthorized
        '403':
          description: Access forbidden
        '404':
          description: Zone is not found
  /v1/track-shipping:
    post:
      tags:
        - Shipping
      summary: Track Shipping
      description: Track the shipping of shipping group with one or many parcels from warehouse.
      operationId: trackShippingV1
      requestBody:
        description: TrackShipping input to track
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackShippingV1'
        required: true
      responses:
        '200':
          description: Container split with containerIds
        '400':
          description: Invalid input
        '401':
          description: Access unauthorized
        '403':
          description: Access forbidden
        '404':
          description: Shipping not found in database
        '412':
          description: Shipping is cancelled
  /v1/shippings/{shipping_id}/containers/{container_id}/track-pickup:
    put:
      tags:
        - Shipping
      summary: Track Pickup
      description: Track pickup command
      operationId: trackPickup
      parameters:
        - name: shipping_id
          in: path
          description: Id of the shipping
          required: true
          schema:
            type: string
        - name: container_id
          in: path
          description: Id of the container
          required: true
          schema:
            type: string
      requestBody:
        description: TrackingMessage
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackingMessage'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Status is not authorized for track pickup
        '401':
          description: Access unauthorized
        '403':
          description: Access forbidden
        '404':
          description: Shipping container does not exist
        '412':
          description: Container Status not consistent because current status was final
  /v1/zones/{id}:
    get:
      tags:
        - Zones
      summary: Get zone by id
      description: Get zone by id
      operationId: getZone
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Zone'
        '401':
          description: Access unauthorized
        '403':
          description: Access forbidden
        '404':
          description: Zone is not found
    put:
      tags:
        - Zones
      summary: Create or update a zone
      description: Create or update a zone. If a zone with same ID already exists, then the zone is not created but updated.
      operationId: put
      parameters:
        - name: id
          in: path
          description: ID of the zone
          required: true
          schema:
            type: string
          example: 957d1ade-3c5b-4d7c-937b-e614caebaba1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZoneDTO'
        required: true
      responses:
        '201':
          description: When a new zone is created
        '204':
          description: When an existing zone is updated
        '400':
          description: Invalid input
        '401':
          description: Access unauthorized
        '403':
          description: Access forbidden
      security:
        - Bearer:
            - FULFILLER_SETUP
    delete:
      tags:
        - Zones
      summary: Delete zone by ID
      description: Delete zone command
      operationId: delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '401':
          description: Access unauthorized
        '403':
          description: Access forbidden
        '404':
          description: Zone is not found
  /v1/confirm-cancellation:
    post:
      tags:
        - Cancellation
      summary: Cancellation by the merchant
      description: Check that the request is eligible and execute it
      operationId: confirmCancellationByMerchant
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ContainerToConfirmCancellation'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '500':
          description: Internal error
  /v1/retriablejobs/executions/{executionId}/reset:
    post:
      tags:
        - retriable-jobs-management
      summary: Reset a job execution
      operationId: reset
      parameters:
        - name: executionId
          in: path
          description: Id of the job execution
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
        '401':
          description: Access unauthorized
        '403':
          description: Access forbidden
        '404':
          description: JobExecution not found
  /v1/replay/{id}:
    get:
      tags:
        - Replay
      summary: Replay all events
      description: Get replay by Id.
      operationId: get_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Replay'
        '500':
          description: Internal error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Replay'
    delete:
      tags:
        - Replay
      summary: Replay all events
      description: Delete replay by id.
      operationId: cancel
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: No content
        '500':
          description: Internal error
  /v1/unbook-shipping:
    post:
      tags:
        - Shipping
      summary: Unbook shipping
      description: Unbook shipping command
      operationId: unbookShipping
      requestBody:
        description: ShippingUnbookInput
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShippingUnbookInput'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Invalid input
        '401':
          description: Access unauthorized
        '403':
          description: Access forbidden
  /v1/retriablejobs/jobs/{jobName}/unpause:
    post:
      tags:
        - retriable-jobs-management
      summary: Unpause a job
      operationId: unpause
      parameters:
        - name: jobName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '401':
          description: Access unauthorized
        '403':
          description: Access forbidden
  /v1/shipping/{shipping_id}/container/{container_id}/details:
    get:
      tags:
        - Container
      summary: Get container entity information
      description: Container entity information
      operationId: getContainerEntityForProjectTeam
      parameters:
        - name: shipping_id
          in: path
          description: Shipping ID
          required: true
          schema:
            type: string
        - name: container_id
          in: path
          description: Container ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Container entity information
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContainerEntity'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Container not found
  /simulate_supa_message:
    post:
      tags:
        - supa-kafka-test-controller
      summary: Simulate receiving a SUPA message on kafkalistener
      description: Simulate receiving a SUPA message on kafkalistener
      operationId: produce
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SUPATrackingEventPayload'
        required: true
      responses:
        '200':
          description: Success
        '500':
          description: Internal error
  /v1/verify-cancellation-eligibility:
    post:
      tags:
        - Cancellation
      summary: Cancellation by the merchant
      description: Check that the request is eligible, but doesn't execute it. Use /confirm-cancellation to request the execution.
      operationId: verifyMerchantCancellationEligibility
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ContainerToCancel'
        required: true
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContainerCancellationDecision'
        '400':
          description: Bad request
        '500':
          description: Internal error
  /v2/shipping/{shipping_id}/container/{container_id}:
    get:
      tags:
        - Container
      summary: Get container entity information
      description: Container entity information
      operationId: getContainerExposition
      parameters:
        - name: shipping_id
          in: path
          description: Shipping ID
          required: true
          schema:
            type: string
        - name: container_id
          in: path
          description: Container ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Container entity information
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContainerExposition'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Container not found
  /v1/retriablejobs/jobs/{jobName}:
    get:
      tags:
        - retriable-jobs-management
      summary: Find job by name
      operationId: findJobDefinition
      parameters:
        - name: jobName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RetriableJobDefinition'
        '400':
          description: 'Bad Request (example : status not valid)'
        '401':
          description: Access unauthorized
        '403':
          description: Access forbidden
        '404':
          description: Job not found
  /v1/shippings/{shipping_id}/containers/{container_id}/validate:
    post:
      tags:
        - Shipping
      summary: Manually validate shipping command
      description: Validate a shipping manually
      operationId: validate
      parameters:
        - name: shipping_id
          in: path
          description: Shipping ID
          required: true
          schema:
            type: string
        - name: container_id
          in: path
          description: Container ID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Validate command has been received
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Container is not found
        '412':
          description: Container is not in ERROR status
  /v1/retriablejobs/jobs:
    get:
      tags:
        - retriable-jobs-management
      summary: List all jobs
      operationId: listAll
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RetriableJobDefinition'
        '400':
          description: 'Bad Request (example : status not valid)'
        '401':
          description: Access unauthorized
        '403':
          description: Access forbidden
  /v1/replay:
    get:
      tags:
        - Replay
      summary: Get all replays.
      description: Get all replays.
      operationId: list
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                type: object
        '500':
          description: Internal error
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
        - Replay
      summary: Replay all events
      description: Reset the offset of all kafka partition to 0. Every partition will be re-read from the start.
      operationId: replay
      parameters:
        - name: force_now
          in: query
          description: Force timestamp to now instead of using timestamp of kafka stock message when push availability (oneff)
          required: false
          schema:
            type: boolean
        - name: clear_cache
          in: query
          description: Clear cache
          required: false
          schema:
            type: boolean
      requestBody:
        description: Replay context
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplayContext'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Division or country is required to replay a topic
  /v1/retriablejobs/executions:
    get:
      tags:
        - retriable-jobs-management
      summary: List all executions matching the given criterias
      operationId: listAll_1
      parameters:
        - name: jobName
          in: query
          description: job name
          required: false
          schema:
            type: string
          example: myJob
        - name: status
          in: query
          description: job status
          required: false
          schema:
            type: string
            enum:
              - CREATED
              - DONE
              - TO_RETRY
              - ABORTED
              - PAUSED
          example: DONE
        - name: errorMessage
          in: query
          description: the string to find inside the error messages
          required: false
          schema:
            type: string
          example: 404
        - name: range
          in: query
          description: the range of executions to return, default is 0-9
          required: false
          schema:
            $ref: '#/components/schemas/Range'
          example: 0-9
      responses:
        '206':
          description: Partial Content
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RetriableJobExecution'
        '400':
          description: 'Bad Request (example : status not valid)'
        '401':
          description: Access unauthorized
        '403':
          description: Access forbidden
  /v1/shipping/{shipping_id}/container/{container_id}:
    get:
      tags:
        - Container
      summary: Get container detailled information
      description: Specific shipping details of a container
      operationId: getContainerInformation
      parameters:
        - name: shipping_id
          in: path
          description: Shipping ID
          required: true
          schema:
            type: string
        - name: container_id
          in: path
          description: Container ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Specific shipping details of the container
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContainerInformation'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Container not found
      deprecated: true
  /v1/submit-shipping:
    post:
      tags:
        - Shipping
      summary: Submit shipping (1st oneff step)
      description: Submit shipping command
      operationId: submitShipping
      requestBody:
        description: ShippingSubmission
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShippingSubmission'
        required: true
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BookingConfirmation'
        '400':
          description: Zone is not found
        '401':
          description: Access unauthorized
        '403':
          description: Access forbidden
  /v1/shippings/{shipping_id}/containers/{container_id}/reject:
    post:
      tags:
        - Shipping
      summary: Reject shipping command
      description: Reject shipping
      operationId: reject
      parameters:
        - name: shipping_id
          in: path
          description: Shipping ID
          required: true
          schema:
            type: string
        - name: container_id
          in: path
          description: Container ID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Container reject command has been received
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Container is not found
        '419':
          description: Container is not in ERROR status
  /v1/shipping/{shipping_id}/container/{container_id}/cancel:
    post:
      tags:
        - Cancellation
      summary: Cancel items in container
      description: Request for item cancellation of a container
      operationId: cancelByFulfiller
      parameters:
        - name: shipping_id
          in: path
          description: Shipping ID
          required: true
          schema:
            type: string
        - name: container_id
          in: path
          description: Container ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelItemsRequest'
        required: true
      responses:
        '200':
          description: Cancellation request success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CancelItemsResponse'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Container not found
        '500':
          description: Internal error
  /v1/retriablejobs/executions/{executionId}/abort:
    post:
      tags:
        - retriable-jobs-management
      summary: Abort a job execution
      operationId: abort
      parameters:
        - name: executionId
          in: path
          description: Id of the job execution
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
        '401':
          description: Access unauthorized
        '403':
          description: Access forbidden
        '404':
          description: JobExecution not found
        '412':
          description: JobExecution cannot be aborted
  /v1/entity/containers:
    get:
      tags:
        - Queries for admin
      summary: Get container entity information
      description: Container entity information
      operationId: getShippings
      parameters:
        - name: submitted_at_start
          in: query
          description: Submitted date start (included)
          required: false
          schema:
            type: string
            format: date-time
        - name: submitted_at_end
          in: query
          description: Submitted date end (included)
          required: false
          schema:
            type: string
            format: date-time
        - name: validated_at_start
          in: query
          description: Validated date start (included)
          required: false
          schema:
            type: string
            format: date-time
        - name: validated_at_end
          in: query
          description: Validated date end (included)
          required: false
          schema:
            type: string
            format: date-time
        - name: cancelled_at_start
          in: query
          description: Cancelled date start (included)
          required: false
          schema:
            type: string
            format: date-time
        - name: cancelled_at_end
          in: query
          description: Cancelled date end (included)
          required: false
          schema:
            type: string
            format: date-time
        - name: eta_from_start
          in: query
          description: eta_from date start (included)
          required: false
          schema:
            type: string
            format: date-time
        - name: eta_to_end
          in: query
          description: eta_to date end (included)
          required: false
          schema:
            type: string
            format: date-time
        - name: promise_shipping_date_start
          in: query
          description: promise shipping date date start (included)
          required: false
          schema:
            type: string
            format: date-time
        - name: promise_shipping_date_end
          in: query
          description: promise shipping date date end (included)
          required: false
          schema:
            type: string
            format: date-time
        - name: status
          in: query
          description: Container tracking status
          required: false
          schema:
            type: array
            items:
              type: string
        - name: sub_status
          in: query
          description: Container tracking sub status
          required: false
          schema:
            type: array
            items:
              type: string
        - name: fulfillment_type
          in: query
          description: fulfillment type
          required: false
          schema:
            type: array
            items:
              type: string
        - name: shorten_container_id
          in: query
          description: Shorten container id
          required: false
          schema:
            type: string
        - name: carrier_method_code
          in: query
          description: Carrier method code
          required: false
          schema:
            type: string
        - name: carrier_code
          in: query
          description: Carrier code
          required: false
          schema:
            type: string
        - name: zone_id
          in: query
          description: Zone id
          required: false
          schema:
            type: string
        - name: final_zone_id
          in: query
          description: Final zone id
          required: false
          schema:
            type: string
        - name: order_id
          in: query
          description: Order id
          required: false
          schema:
            type: string
        - name: country_code
          in: query
          description: Country code
          required: true
          schema:
            type: string
        - name: maxPageSize
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Shipping entity information
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContainerEntity'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /v1/retriablejobs/executions/{executionId}:
    get:
      tags:
        - retriable-jobs-management
      summary: Get a job execution
      operationId: get_1
      parameters:
        - name: executionId
          in: path
          description: Id of the job execution
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RetriableJobExecution'
        '401':
          description: Access unauthorized
        '403':
          description: Access forbidden
        '404':
          description: JobExecution not found
  /v1/replay/seekToPartitionAndOffset:
    post:
      tags:
        - Replay
      summary: Replay some event from a given partition.
      description: Reset an offset of a specific partition to a given value.
      operationId: replayAPartitionFromAGivenOffset
      parameters:
        - name: topic
          in: query
          required: true
          schema:
            type: string
        - name: partition
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /v1/ping:
    get:
      tags:
        - ping-controller
      summary: Ping endpoint to check the app availability
      description: This should always return 200 OK
      operationId: ping
      responses:
        '200':
          description: When the service is up
        '503':
          description: When the service is unavailable
  /v1/shippings/{shipping_id}/containers/{container_id}/track-delivery:
    put:
      tags:
        - Shipping
      summary: Track Delivery
      description: Track delivery command
      operationId: trackDelivery
      parameters:
        - name: shipping_id
          in: path
          description: Id of the shipping
          required: true
          schema:
            type: string
        - name: container_id
          in: path
          description: Id of the container
          required: true
          schema:
            type: string
      requestBody:
        description: A track delivery message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryMessage'
        required: true
      responses:
        '200':
          description: Success
        '404':
          description: Shipping container does not exist
        '409':
          description: Status conflict
        '412':
          description: Precondition failure
  /v2/track-shipping:
    post:
      tags:
        - Shipping
      summary: Track Shipping
      description: Track the shipping of shipping group with one or many parcels from warehouse.
      operationId: trackShippingV2
      requestBody:
        description: TrackShipping input to track
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackShippingV2'
        required: true
      responses:
        '200':
          description: Container split with containerIds
        '400':
          description: Invalid input
        '401':
          description: Access unauthorized
        '403':
          description: Access forbidden
        '404':
          description: Shipping not found in database
        '412':
          description: Shipping is cancelled
components:
  schemas:
    Container:
      required:
        - container_id
        - delivery
        - delivery_slot
        - items
        - zones
      type: object
      properties:
        container_id:
          maxLength: 255
          minLength: 0
          type: string
        delivery:
          $ref: '#/components/schemas/Delivery'
        delivery_slot:
          $ref: '#/components/schemas/DeliverySlot'
        items:
          type: array
          items:
            $ref: '#/components/schemas/Item'
        zones:
          type: array
          items:
            $ref: '#/components/schemas/Zone'
        logistic_class:
          $ref: '#/components/schemas/LogisticClass'
        complementary_data:
          type: array
          items:
            $ref: '#/components/schemas/KeyValue'
        fulfillment_contract_data:
          type: array
          items:
            $ref: '#/components/schemas/KeyValue'
        payment_detail:
          $ref: '#/components/schemas/PaymentDetail'
    Delivery:
      required:
        - fulfillment_type
      type: object
      properties:
        delivery_id:
          maxLength: 255
          minLength: 0
          type: string
        fulfillment_type:
          type: string
          enum:
            - USER_DELIVERY
            - STORE_DELIVERY
            - STORE_PICKUP
            - EXTERNAL_PICKUP
        carrier_name:
          maxLength: 255
          minLength: 0
          type: string
        carbon_footprint:
          type: integer
          format: int32
        pickup_point_selection:
          $ref: '#/components/schemas/PickupPointSelection'
    DeliverySlot:
      type: object
      properties:
        delivery_slot_id:
          maxLength: 255
          minLength: 0
          type: string
        date_from:
          maxLength: 255
          minLength: 0
          type: string
        date_to:
          maxLength: 255
          minLength: 0
          type: string
        time_window:
          $ref: '#/components/schemas/TimeWindow'
        amount:
          type: number
          description: cost of the product in micro-unit. e.g., 1€ is 1000000
          format: double
          example: 1000000
        currency:
          maxLength: 255
          minLength: 0
          type: string
        tax_rate:
          type: number
          description: the tax rates are expressed in millionths of one percent, effectively giving 6 decimals of precision—e.g., if the tax rate is 1.234%, this field should be set to 1234000
          format: double
          example: 1234000
    GeoPoint:
      required:
        - coordinates
      type: object
      properties:
        type:
          type: string
          enum:
            - Point
        coordinates:
          type: array
          items:
            type: number
            format: double
    Item:
      required:
        - price
        - quantity
        - sku_id
      type: object
      properties:
        item_id:
          maxLength: 255
          minLength: 0
          type: string
        sku_id:
          maxLength: 255
          minLength: 0
          type: string
        option_id:
          maxLength: 255
          minLength: 0
          type: string
        quantity:
          type: integer
          format: int32
        price:
          $ref: '#/components/schemas/Price'
    KeyValue:
      required:
        - name
        - value
      type: object
      properties:
        name:
          maxLength: 255
          minLength: 0
          type: string
        value:
          maxLength: 255
          minLength: 0
          type: string
    KeyValueWithoutControl:
      required:
        - name
        - value
      type: object
      properties:
        name:
          type: string
        value:
          type: string
    LogisticClass:
      type: object
      properties:
        logistic_class_id:
          maxLength: 255
          minLength: 0
          type: string
        logistic_class_name:
          maxLength: 255
          minLength: 0
          type: string
    OneFFShippingValidation:
      required:
        - merchant_id
        - offer_id
        - order_contract_data
        - order_id
        - shipping_id
      type: object
      properties:
        shipping_id:
          type: string
        offer_id:
          type: string
        order_id:
          type: string
        merchant_id:
          type: string
        order_contract_data:
          type: array
          items:
            $ref: '#/components/schemas/KeyValueWithoutControl'
        containers:
          type: array
          items:
            $ref: '#/components/schemas/Container'
    PaymentDetail:
      type: object
      properties:
        paid_amount:
          type: integer
          format: int64
        to_be_collected_amount:
          type: integer
          format: int64
    PickupPointSelection:
      type: object
      properties:
        pickup_point_id:
          maxLength: 255
          minLength: 0
          type: string
        pickup_point_definition:
          $ref: '#/components/schemas/GeoPoint'
        service_type:
          maxLength: 255
          minLength: 0
          type: string
    Price:
      type: object
      properties:
        price_id:
          maxLength: 255
          minLength: 0
          type: string
        amount:
          type: number
          description: cost of the product in micro-unit. e.g., 1€ is 1000000
          format: double
          example: 1000000
        currency:
          maxLength: 255
          minLength: 0
          type: string
        tax_rate:
          type: number
          description: the tax rates are expressed in millionths of one percent, effectively giving 6 decimals of precision—e.g., if the tax rate is 1.234%, this field should be set to 1234000
          format: double
          example: 1234000
    TimeWindow:
      type: object
      properties:
        time_from:
          pattern: ([01][0-9]|2[0-3]):[0-5][0-9]$
          type: string
          description: time from matching date from ("HH:mm" format)
          example: "{from:'08:30'}"
        time_to:
          pattern: ([01][0-9]|2[0-3]):[0-5][0-9]$
          type: string
          description: time to matching date to ("HH:mm" format)
          example: "{to:'20:00'}"
    Zone:
      type: object
      properties:
        zone_id:
          type: string
        zone_name:
          type: string
        zone_display_name:
          type: string
        division:
          type: string
        reservation_duration_in_seconds:
          type: integer
          format: int32
        country:
          type: string
        ean:
          type: string
        booking_decrease_availability:
          type: boolean
        warehouse_country:
          type: string
    MaterialV1:
      required:
        - skuId
      type: object
      properties:
        skuId:
          type: string
        quantity:
          type: number
          format: double
        tracability:
          type: array
          items:
            type: string
    ParcelV1:
      required:
        - trackingId
        - weight
      type: object
      properties:
        trackingId:
          type: string
        deliveryDateTime:
          type: string
          format: date-time
        weight:
          type: string
        parcelWidth:
          type: string
        parcelLength:
          type: string
        parcelHeight:
          type: string
        materials:
          type: array
          items:
            $ref: '#/components/schemas/MaterialV1'
    TrackShippingV1:
      required:
        - creationDateTime
        - sender
        - shipmentId
        - shippingGroupId
        - zean
      type: object
      properties:
        sender:
          type: string
        zean:
          type: string
        creationDateTime:
          type: string
          format: date-time
        shipmentId:
          type: string
        shippingGroupId:
          type: string
        parcels:
          type: array
          items:
            $ref: '#/components/schemas/ParcelV1'
    TrackingMessage:
      type: object
      properties:
        status:
          type: string
          enum:
            - TO_COLLECT
            - FULFILLED
        timestamp:
          type: string
          format: date-time
    ContainerToConfirmCancellation:
      required:
        - container_id
        - shipping_id
      type: object
      properties:
        shipping_id:
          type: string
        container_id:
          type: string
        items_to_cancel:
          type: array
          items:
            $ref: '#/components/schemas/ItemToCancel'
        payment_detail:
          $ref: '#/components/schemas/PaymentDetail'
    ItemToCancel:
      type: object
      properties:
        item_id:
          type: string
        quantity:
          type: integer
          format: int32
        reason:
          type: string
        reason_info:
          type: string
    ZoneDTO:
      required:
        - country
      type: object
      properties:
        zone_name:
          type: string
        zone_display_name:
          type: string
        division:
          type: string
        reservation_duration_in_seconds:
          minimum: 0
          type: integer
          description: Reservation duration
          format: int32
          default: 0
        country:
          pattern: ^[A-Z]{2}$
          type: string
          description: The country
        ean:
          type: string
        booking_decrease_availability:
          type: boolean
          description: true if we have to take into account the booking_quantity for this zone
          default: true
        warehouse_country:
          type: string
          description: The warehouse country
    ShippingUnbookInput:
      required:
        - shipping_id
      type: object
      properties:
        shipping_id:
          type: string
    ContainerEntity:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        shorten_container_id:
          type: string
        last_purchase_order_id:
          type: string
        status:
          type: string
          enum:
            - CREATED
            - IN_PREPARATION
            - SPLIT
            - IN_TRANSIT
            - IN_DELIVERY
            - TO_COLLECT
            - REJECTED
            - CANCELLED
            - FULFILLED
            - ERROR
        cancellable:
          type: boolean
        validated_shipping_details:
          $ref: '#/components/schemas/EccOrder'
        submitted_at:
          type: string
          format: date-time
        validated_at:
          type: string
          format: date-time
        validate_confirmed_at:
          type: string
          format: date-time
        cancelled_at:
          type: string
          format: date-time
        unbooked_at:
          type: string
          format: date-time
        booking_response:
          type: integer
          format: int32
        oneff_container:
          $ref: '#/components/schemas/Container'
        eta_from:
          type: string
          format: date-time
        eta_to:
          type: string
          format: date-time
        tracking_units:
          type: array
          items:
            $ref: '#/components/schemas/TrackingUnit'
        oneff_shipping_infos:
          $ref: '#/components/schemas/OneFFShippingInfos'
        carrier_code:
          type: string
        order_id:
          type: string
        promise_shipping_date:
          type: string
          format: date-time
        carrier_method_code:
          type: string
        country_code:
          type: string
        final_zone_id:
          type: string
        sub_status:
          type: string
        supa_status_details:
          $ref: '#/components/schemas/SUPATrackingEventPayload'
        item_update_events:
          type: array
          items:
            $ref: '#/components/schemas/ItemUpdateEvent'
        parcels:
          type: array
          items:
            $ref: '#/components/schemas/Parcel'
        last_update:
          type: string
          format: date-time
        payment_detail:
          $ref: '#/components/schemas/PaymentDetail'
        fulfiller_eligible_actions:
          type: array
          items:
            $ref: '#/components/schemas/EligibleAction'
        current_items:
          type: array
          items:
            $ref: '#/components/schemas/Item'
    EccAddress:
      type: object
      properties:
        address_type:
          type: string
        relay_point_id:
          type: string
        relay_point_type:
          type: string
        relay_point_name:
          type: string
        customer_name:
          type: string
        pick_up_friend_name:
          type: string
        street_number:
          type: string
        street_name:
          type: string
        additional_address1:
          type: string
        additional_address2:
          type: string
        postal_code:
          type: string
        city:
          type: string
        country_code:
          type: string
        store_ean:
          type: string
    EccCustomer:
      type: object
      properties:
        first_name:
          type: string
        name:
          type: string
        phone_number:
          type: string
        email:
          type: string
        address:
          $ref: '#/components/schemas/EccCustomerAddress'
        language_code:
          type: string
    EccCustomerAddress:
      type: object
      properties:
        street_number:
          type: string
        street_name:
          type: string
        additional_address1:
          type: string
        additional_address2:
          type: string
        postal_code:
          type: string
        city:
          type: string
        country_code:
          type: string
    EccMaterial:
      type: object
      properties:
        supplier_party_ean:
          type: string
        line_number:
          type: string
        product_id:
          type: string
        pre_order_status:
          type: string
        pre_order_id:
          type: string
        purchase_order_id:
          type: string
        quantity:
          type: string
        unit_code:
          type: string
        return_reason:
          type: string
    EccOrder:
      type: object
      properties:
        supplier_party_ean:
          type: string
        order_id:
          type: string
        last_purchase_order_id:
          type: string
        order_type:
          type: string
        delivery_date_time:
          type: string
        promised_ship_date_time:
          type: string
        order_creation_date_time:
          type: string
        shipment_id:
          type: string
        reference_store_ean:
          type: string
        invoice_url:
          type: string
        shipping:
          $ref: '#/components/schemas/EccShipping'
        customer:
          $ref: '#/components/schemas/EccCustomer'
        materials:
          type: array
          items:
            $ref: '#/components/schemas/EccMaterial'
        payments:
          type: array
          items:
            $ref: '#/components/schemas/EccPayment'
    EccPayment:
      type: object
      properties:
        type:
          type: string
        amount:
          type: string
        currency:
          type: string
    EccShipping:
      type: object
      properties:
        carrier:
          type: string
        carrier_method:
          type: string
        delivery_address:
          type: array
          items:
            $ref: '#/components/schemas/EccAddress'
    EligibleAction:
      type: object
      properties:
        action:
          type: string
          enum:
            - FULL_CANCELLATION
            - PARTIAL_CANCELLATION
        eligible:
          type: boolean
    Id:
      type: object
      properties:
        shipping_id:
          type: string
        container_id:
          type: string
    ItemUpdateEvent:
      required:
        - item_id
        - quantity
        - sku_code
      type: object
      properties:
        item_id:
          type: string
        sku_code:
          type: string
        quantity:
          type: integer
          format: int32
        reason:
          type: string
        update_type:
          type: string
          enum:
            - CANCELLED_BY_FF
            - CANCELLED_BY_MERCHANT
        timestamp:
          type: string
          format: date-time
    Material:
      type: object
      properties:
        skuId:
          type: string
        quantity:
          type: number
          format: double
        tracability:
          type: array
          items:
            type: string
    OneFFShippingInfos:
      type: object
      properties:
        shipping_id:
          type: string
        offer_id:
          type: string
        order_id:
          type: string
        merchant_id:
          type: string
        order_contract_data:
          type: array
          items:
            $ref: '#/components/schemas/KeyValueWithoutControl'
    Parcel:
      type: object
      properties:
        trackingId:
          type: string
        deliveryDateTime:
          type: string
          format: date-time
        weight:
          type: string
        width:
          type: string
        length:
          type: string
        height:
          type: string
        parcelWidth:
          type: string
        parcelLength:
          type: string
        parcelHeight:
          type: string
        materials:
          type: array
          items:
            $ref: '#/components/schemas/Material'
    SUPAArticleTrackingStatus:
      type: object
      properties:
        current:
          type: integer
          format: int32
        last_update_timestamp:
          type: string
          format: date-time
    SUPAItem:
      type: object
      properties:
        article_id:
          type: string
        quantity:
          $ref: '#/components/schemas/SUPAQuantity'
        article_tracking_status:
          $ref: '#/components/schemas/SUPAArticleTrackingStatus'
    SUPAQuantity:
      type: object
      properties:
        ordered_quantity:
          type: integer
          format: int32
        ordered_request_quantity:
          type: integer
          format: int32
        confirmed_quantity:
          type: integer
          format: int32
        transferred_quantity:
          type: integer
          format: int32
        shortage_quantity:
          type: integer
          format: int32
        leadtime:
          type: string
    SUPAShippingGroupStatus:
      type: object
      properties:
        current:
          type: integer
          format: int32
        last_update_timestamp:
          type: string
          format: date-time
    SUPATrackingEventPayload:
      type: object
      properties:
        shipping_group_id:
          type: string
        customer_ean:
          type: string
        shipping_group_status:
          $ref: '#/components/schemas/SUPAShippingGroupStatus'
        items:
          type: array
          items:
            $ref: '#/components/schemas/SUPAItem'
    TrackingUnit:
      type: object
      properties:
        tracking_number:
          type: string
        tracking_url:
          type: string
    ContainerToCancel:
      required:
        - container_id
        - shipping_id
      type: object
      properties:
        shipping_id:
          type: string
        container_id:
          type: string
        items_to_cancel:
          type: array
          items:
            $ref: '#/components/schemas/ItemToCancel'
    ContainerCancellationDecision:
      required:
        - container_id
        - shipping_id
      type: object
      properties:
        shipping_id:
          type: string
        container_id:
          type: string
        item_decisions:
          type: array
          items:
            $ref: '#/components/schemas/ItemCancellationDecision'
    ItemCancellationDecision:
      type: object
      properties:
        item_id:
          type: string
        quantity:
          type: integer
          format: int32
        status:
          type: string
          enum:
            - ACCEPTED
            - REFUSED
        status_info:
          type: string
    ContainerExposition:
      type: object
      properties:
        shipping_id:
          type: string
          description: Shipping id oneFF
          example: 28846be4-cfde-48eb-ad0c-aef4b1cb63cc
        container_id:
          type: string
          description: Container id oneFF
          example: c4bc5993-6e51-4c9b-a1c4-c8784c707891
        fulfiller_container_id:
          type: string
          description: id of the container in the OMS (for SAP orders it's the Shipping Group Number, for stores it's the container id)
          example: ATFFW001012643 / 0c663825-ca46-45e0-8352-41777eadbad0
        order_id:
          type: string
          description: id of the order (generated by the merchant oneOM)
        country:
          type: string
          description: country of the e-commerce
          example: AT
        tracking_status:
          type: string
          description: status of the container tracking
          enum:
            - CREATED
            - REJECTED
            - CANCELLED
            - IN_PREPARATION
            - IN_TRANSIT
            - IN_DELIVERY
            - TO_COLLECT
            - FULFILLED
        fulfiller_sub_status:
          type: string
          description: more info about the status in case an event occurred
          enum:
            - TOTAL_SHORTAGE
            - PARTIAL_SHORTAGE
            - DELAY
            - REPLENISHMENT
        merchant_cancellable:
          type: boolean
          description: if the order can be cancelled or not by the merchant
        creation_date:
          type: string
          description: date when the order has been validated (confirmation after payment), not sure it has been created
          format: date-time
          example: '2021-04-01T11:00:00Z'
        fulfillment_type:
          type: string
          description: Fulfillment type chosen by the customer
          enum:
            - USER_DELIVERY
            - STORE_DELIVERY
            - STORE_PICKUP
            - EXTERNAL_PICKUP
        delivery:
          $ref: '#/components/schemas/DeliveryExposition'
        preparation_zone:
          $ref: '#/components/schemas/PreparationZoneExposition'
        fulfillment_customer_data:
          type: array
          description: customer shipping infos (name, address, phone,...)
          items:
            $ref: '#/components/schemas/CustomerDataExposition'
        order_customer_data:
          type: array
          description: customer billing infos (name, address, phone,...)
          items:
            $ref: '#/components/schemas/CustomerDataExposition'
        current_items:
          type: array
          description: current quantities per item in the container
          items:
            $ref: '#/components/schemas/CurrentItemExposition'
        shipping_fees:
          $ref: '#/components/schemas/ShippingFeesExposition'
        parcels:
          type: array
          items:
            $ref: '#/components/schemas/ParcelExposition'
        fulfiller_eligible_actions:
          type: array
          items:
            $ref: '#/components/schemas/EligibleActionExposition'
    CurrentItemExposition:
      type: object
      properties:
        sku_code:
          type: string
          description: code R3
        quantity:
          type: integer
          description: current quantity
          format: int32
        price:
          $ref: '#/components/schemas/PriceExposition'
        item_status:
          type: string
          description: sub status of the item
          enum:
            - CONFIRMED
            - SHORTAGE
            - DELAY
            - REPLENISHMENT
        status_quantity:
          type: array
          items:
            $ref: '#/components/schemas/StatusQuantityExposition'
        replenishment_status:
          type: string
          description: status in case of replenishment
          enum:
            - CREATED
            - IN_PREPARATION
            - IN_TRANSIT
            - IN_TRANSIT_PARTIAL
        replenishment_lead_time:
          type: string
          description: leadtime to get the quantity in days
          example: '5'
      description: current quantities per item in the container
    CustomerDataExposition:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
      description: customer billing infos (name, address, phone,...)
    DeliveryExposition:
      type: object
      properties:
        initial_promise:
          $ref: '#/components/schemas/PromiseExposition'
        current_promise:
          $ref: '#/components/schemas/PromiseExposition'
        promise_shipping_date:
          type: string
          description: shipping promise date with hours also
          format: date-time
        carrier_code:
          type: string
          description: carrier code in DKT ref
          example: POST_AUSTRIA
        carrier_method_code:
          type: string
          description: carrier method code in DKT ref
          example: POS_BK_AUT
        pickup_point:
          $ref: '#/components/schemas/PickupPointExposition'
    EligibleActionExposition:
      type: object
      properties:
        action:
          type: string
          description: name of the action
          enum:
            - FULL_CANCELLATION
            - PARTIAL_CANCELLATION
        eligible:
          type: boolean
          description: define if action is possible
    ItemExposition:
      type: object
      properties:
        sku_code:
          type: string
          description: code R3
        quantity:
          type: integer
          description: quantity can be partial
          format: int32
    ParcelExposition:
      type: object
      properties:
        tracking_number:
          type: string
          description: tracking number of the parcel
        tracking_url:
          type: string
          description: url of the tracking for customer
        items:
          type: array
          items:
            $ref: '#/components/schemas/ItemExposition'
    PickupPointExposition:
      type: object
      properties:
        id:
          type: string
          description: id of the pickup point in oneFF chosen by the customer
          example: 0033dd1f-483a-46d7-8098-8edba7df78ed
        service_type:
          type: string
          description: service type of pickup point chosen by the customer
          enum:
            - LOCKER
            - SHOP
            - DRIVE
    PreparationZoneExposition:
      type: object
      properties:
        id:
          type: string
          description: id of the preparation zone
          example: 1997fbcc-b5a7-4fd2-944c-01949744bcea
        name:
          type: string
          description: display name of the zone
          example: CAR Manheim
        external_number:
          type: string
          description: number of the warehouse or the store
          example: 'entrepot: W083, store: 2055'
        ean:
          type: string
          description: ean of the warehouse of the store
        fulfiller:
          type: string
          description: subfulfiller that manage this zone
          enum:
            - sapff
            - storesff
    PriceExposition:
      type: object
      properties:
        currency:
          type: string
          description: currencies follow the ISO-4217
          example: EUR
        amount:
          type: number
          description: cost of the product in micro-unit. e.g., 1€ is 1000000
          format: double
          example: 1000000
        tax_rate:
          type: number
          description: the tax rates are expressed in millionths of one percent, effectively giving 6 decimals of precision—e.g., if the tax rate is 1.234%, this field should be set to 1234000
          format: double
          example: 1234000
    PromiseExposition:
      type: object
      properties:
        date_from:
          type: string
          description: delivery promise date from ("yyyy-MM-dd" format)
          format: date
          example: '2021-02-02'
        date_to:
          type: string
          description: delivery promise date to ("yyyy-MM-dd" format)
          format: date
          example: '2021-02-03'
        time_window:
          $ref: '#/components/schemas/TimeWindow'
      description: same as initial if not updated
    ShippingFeesExposition:
      type: object
      properties:
        amount:
          type: number
          description: cost of the shipping fees in micro-unit. e.g., 1€ is 1000000
          format: double
          example: 1000000
        currency:
          type: string
          description: currencies follow the ISO-4217
          example: EUR
        tax_rate:
          type: number
          description: the tax rates are expressed in millionths of one percent, effectively giving 6 decimals of precision—e.g., if the tax rate is 1.234%, this field should be set to 1234000
          format: double
          example: 1234000
    StatusQuantityExposition:
      type: object
      properties:
        status:
          type: string
          description: status of the quantity
          enum:
            - CONFIRMED
            - SHORTAGE
            - REPLENISHMENT
        quantity:
          type: integer
          description: quantity impacted by this status
          format: int32
          example: 3
    RetriableJobDefinition:
      type: object
      properties:
        id:
          type: integer
          format: int64
        job_name:
          type: string
        paused:
          type: boolean
    ReplayContext:
      type: object
      properties:
        division:
          type: string
        country:
          type: string
        sku_ids:
          type: array
          items:
            type: string
    Jsonb:
      type: object
      properties:
        data:
          type: string
    RetriableJobExecution:
      type: object
      properties:
        id:
          type: integer
          format: int64
        job_name:
          type: string
        context:
          $ref: '#/components/schemas/Jsonb'
        status:
          type: string
          enum:
            - CREATED
            - DONE
            - TO_RETRY
            - ABORTED
            - PAUSED
        error_message:
          type: string
        retry_count:
          type: integer
          format: int32
        next_retry_at:
          type: string
          format: date-time
        lease_until:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        span_context:
          $ref: '#/components/schemas/Jsonb'
    Range:
      type: object
      properties:
        start:
          type: integer
          format: int32
        end:
          type: integer
          format: int32
        first_page:
          type: boolean
    ContainerInformation:
      type: object
      properties:
        container_external_id:
          type: string
        zone_external_id:
          type: string
    Coordinates:
      type: object
      properties:
        lng:
          type: number
          format: double
        lat:
          type: number
          format: double
    LocationContext:
      required:
        - country
      type: object
      properties:
        country:
          maxLength: 2
          minLength: 0
          type: string
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        radius:
          type: number
          format: double
    ShippingSubmission:
      required:
        - containers
        - merchant_id
        - offer_id
        - order_id
        - shipping_id
      type: object
      properties:
        shipping_id:
          maxLength: 255
          minLength: 0
          type: string
        offer_id:
          maxLength: 255
          minLength: 0
          type: string
        order_id:
          maxLength: 255
          minLength: 0
          type: string
        merchant_id:
          maxLength: 255
          minLength: 0
          type: string
        containers:
          type: array
          items:
            $ref: '#/components/schemas/Container'
        location_context:
          $ref: '#/components/schemas/LocationContext'
    BookingConfirmation:
      type: object
      properties:
        expiry_sec:
          type: integer
          format: int32
        rectified_zones:
          type: array
          items:
            $ref: '#/components/schemas/RectifiedZone'
        reason:
          type: string
        submitted:
          type: boolean
    RectifiedZone:
      type: object
      properties:
        zone_id:
          type: string
        container_id:
          type: string
    CancelItemsRequest:
      required:
        - items
      type: object
      properties:
        reason:
          type: string
          enum:
            - DELIVERY_ISSUE
            - OUT_OF_STOCK
            - OTHER
            - UNKNOWN
        reason_info:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/SkuQuantity'
    SkuQuantity:
      type: object
      properties:
        sku_code:
          type: string
        quantity:
          type: integer
          format: int32
    CancelItemsResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CancellableItem'
    CancellableItem:
      type: object
      properties:
        sku_code:
          type: string
        status:
          type: string
          enum:
            - ACCEPTED
            - REFUSED
        status_info:
          type: string
    Replay:
      type: object
      properties:
        id:
          type: integer
          format: int32
        context:
          $ref: '#/components/schemas/ReplayContext'
        created_at:
          type: string
          format: date-time
        started_at:
          type: string
          format: date-time
        ended_at:
          type: string
          format: date-time
        cancelled:
          type: boolean
        force_now:
          type: boolean
        clear_cache:
          type: boolean
        end_offsets:
          type: object
          additionalProperties:
            type: integer
            format: int64
        progresses:
          type: array
          items:
            $ref: '#/components/schemas/ReplayProgress'
        completion:
          type: object
          additionalProperties:
            type: integer
            format: int32
    ReplayProgress:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        timestamp:
          type: string
          format: date-time
    DeliveryMessage:
      type: object
      properties:
        status:
          type: string
          enum:
            - CREATED
            - IN_PREPARATION
            - SPLIT
            - IN_TRANSIT
            - IN_DELIVERY
            - TO_COLLECT
            - REJECTED
            - CANCELLED
            - FULFILLED
            - ERROR
        timestamp:
          type: string
          format: date-time
    MaterialV2:
      required:
        - sku_id
      type: object
      properties:
        sku_id:
          type: string
        quantity:
          type: number
          format: double
        tracability:
          type: array
          items:
            type: string
    ParcelV2:
      required:
        - tracking_id
        - weight
      type: object
      properties:
        tracking_id:
          type: string
        delivery_datetime:
          type: string
          format: date-time
        weight:
          type: string
        width:
          type: string
        length:
          type: string
        height:
          type: string
        materials:
          type: array
          items:
            $ref: '#/components/schemas/MaterialV2'
    TrackShippingV2:
      required:
        - creation_datetime
        - sender
        - shipment_id
        - shipping_group_id
        - ztypetiers
      type: object
      properties:
        sender:
          type: string
        ztypetiers:
          type: string
        creation_datetime:
          type: string
          format: date-time
        shipment_id:
          type: string
        shipping_group_id:
          type: string
        parcels:
          type: array
          items:
            $ref: '#/components/schemas/ParcelV2'
  securitySchemes:
    Bearer:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://idpdecathlon.oxylane.com/as/token.oauth2
          scopes:
            TRACKING: Track shipping
            FULFILLER_INTERNAL: |
              Internal modules of DKT-Fulfiller
              (sub-fulfillers, router, pickup-point, delivery))
            FULFILLER_SETUP: DKT-Fulfiller administration (zone, ...))
            CONTAINER_READ: Use to get container information
